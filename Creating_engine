from sqlalchemy import create_engine, Column, Integer, String
from sqlalchemy.orm import sessionmaker, declarative_base



engine = create_engine('sqlite:///:memory:', echo=True)


Base = declarative_base()


class Phone(Base):
    __tablename__ = "Iphone_10_vs_Poco_x3_pro"

    id = Column(Integer, primary_key=True)
    name = Column(String)
    cell_power = Column(Integer)
    memory= Column(String)
    operation_memory = Column(String)
    def __repr__(self):
        return f"name='{self.name}', cell power='{self.cell_power}, memory='{self.memory}, operationmemory='{self.operation_memory}'"


Base.metadata.create_all(bind=engine)


Session = sessionmaker(bind=engine)

session = Session()

Apple = Phone(name="Iphone10", cell_power=10000, memory='128GB',operation_memory='16GB')

Poco = Phone(name="Poco x3 pro", cell_power=15000, memory='64GB',operation_memory='32GB')

session.add(Apple)
session.add(Poco)

session.commit()

phones = session.query(Phone).all()
for user in phones:
    print(user)
